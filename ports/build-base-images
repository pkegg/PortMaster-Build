#! /bin/bash

set -e
set -u
DIR="$(realpath $( dirname "${BASH_SOURCE[0]}" ))"
source "${DIR}/build"

function parse_args() {
  BUILD_PLATFORM="linux/arm64/v8"
  TEST_BUILD_PLATFORM="$(get_linux_platform)"
  USE_DOCKER_PUSH=false
  
  # Parse args
  ARGS=()
  while [[ $# -gt 0 ]]; do
    key="$1"
  
    case $key in
      --platform)
        BUILD_PLATFORM="$2"
        TEST_BUILD_PLATFORM="$2"
        shift # past argument
        shift # past value
        ;;
      -p|--push)
        USE_DOCKER_PUSH="true"
        shift # past argument
        ;;
      -h|--help)
        echo "$0  [arguments]"
        echo "  --platform - builds for specific platform.  Cannot contain multiple comma separated platforms unles --push is specified"
        echo "  --push (-p) - pushes docker images.  Meant for build server"
        exit 1
        ;;
      *)    # unknown option
        ARGS+=("$1") # save it in an array for later
        shift # past argument
        ;;
    esac
  done
}
parse_args "$@"
echo "USE_DOCKER_PUSH: ${USE_DOCKER_PUSH} BUILD_PLATFORM: ${BUILD_PLATFORM}"

source "${DIR}/ports.info"

BRANCH="$GITHUB_BRANCH"
GITHUB_REPO_LOWER=$(echo "$GITHUB_REPO" | tr '[:upper:]' '[:lower:]')

IMAGE_BASE=ghcr.io/${GITHUB_ORG}/${GITHUB_REPO_LOWER}
CACHE_FROM="$BRANCH"

# Update things for Pull requests
if [[ "${GITHUB_EVENT_NAME:-}" == "pull_request_target" && -n "$GITHUB_BASE_REF" && -n "$GITHUB_REF_NAME" ]] ; then
  PR_NUM=$(echo $GITHUB_REF_NAME | sed 's|/.*||g')
  #BRANCH="pr-${PR_NUM}"
  CACHE_FROM="$GITHUB_BASE_REF"
  echo "branch: ${BRANCH}"
  echo "EVENT_NAME: ${GITHUB_EVENT_NAME} BASE_REF: $GITHUB_BASE_REF REF_NAME: $GITHUB_REF_NAME"
  IMAGE_CACHE_TO=""
else
  IMAGE_CACHE_TO=${IMAGE_BASE}/cache:${BRANCH}
fi
IMAGE=${IMAGE_BASE}:${BRANCH}
IMAGE_CACHE_FROM=${IMAGE_BASE}/cache:${CACHE_FROM}

if [[ "${USE_DOCKER_PUSH}" == "true" ]]; then
  IMAGE_CACHE_TO_ARGS="--pull --builder=portmaster-remote-builder --cache-to=type=registry,ref=${IMAGE_CACHE_TO},mode=max --push"
else
  IMAGE_CACHE_TO_ARGS="--load --builder default"
fi

echo "IMAGE: ${IMAGE} IMAGE_CACHE_FROM: ${IMAGE_CACHE_FROM}"
echo "IMAGE_CACHE_TO: ${IMAGE_CACHE_TO}"
docker buildx build --tag ${IMAGE} \
  --cache-from=type=registry,ref=${IMAGE_CACHE_FROM} \
  ${IMAGE_CACHE_TO_ARGS} \
  --platform ${BUILD_PLATFORM} ${DIR}

echo "built: ${IMAGE}"
